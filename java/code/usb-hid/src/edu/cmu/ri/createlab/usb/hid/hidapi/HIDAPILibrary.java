package edu.cmu.ri.createlab.usb.hid.hidapi;

import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import com.ochafik.lang.jnaerator.runtime.CharByReference;
import com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper;
import com.ochafik.lang.jnaerator.runtime.Mangling;
import com.ochafik.lang.jnaerator.runtime.NativeSize;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.WString;

/**
 * JNA Wrapper for library <b>hidapi</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface HIDAPILibrary extends Library
   {
   String JNA_LIBRARY_NAME = NativeLibraryVersionChooser.getLibraryName("hidapi32", "hidapi64");
   HIDAPILibrary INSTANCE = (HIDAPILibrary)Native.loadLibrary(HIDAPILibrary.JNA_LIBRARY_NAME, HIDAPILibrary.class, MangledFunctionMapper.DEFAULT_OPTIONS);

   /**
    * Original signature : <code>hid_init()</code><br>
    * <i>native declaration : hidapi.h:95</i>
    */
   @Mangling({"_Z8hid_initv", "?hid_init@@YAXXZ"})
   int hid_init();

   /**
    * Original signature : <code>hid_exit()</code><br>
    * <i>native declaration : hidapi.h:108</i>
    */
   @Mangling({"_Z8hid_exitv", "?hid_exit@@YAXXZ"})
   int hid_exit();

   /**
    * Original signature : <code>hid_enumerate(unsigned short, unsigned short)</code><br>
    * <i>native declaration : hidapi.h:129</i>
    */
   @Mangling({"_Z13hid_enumeratejj", "?hid_enumerate@@YAXII@Z"})
   HIDDeviceInfo hid_enumerate(short vendor_id, short product_id);

   /**
    * Original signature : <code>hid_free_enumeration(hid_device_info*)</code><br>
    * <i>native declaration : hidapi.h:139</i>
    */
   @Mangling({"_Z20hid_free_enumerationP15hid_device_info", "?hid_free_enumeration@@YAXPA15hid_device_info@Z"})
   void hid_free_enumeration(final HIDDeviceInfo devs);

   /**
    * Original signature : <code>hid_device* hid_open(unsigned short, unsigned short, wchar_t*)</code><br>
    * <i>native declaration : hidapi.h:157</i><br>
    * @deprecated use the safer methods {@link #hid_open(short, short, CharBuffer)} and {@link #hid_open(short, short, CharByReference)} instead
    */
   @Mangling({"_Z8hid_openjjP7wchar_t", "?hid_open@@YAPA11hid_device_IIPA7wchar_t@Z"})
   @Deprecated
   HIDAPILibrary.hid_device hid_open(short vendor_id, short product_id, CharByReference serial_number);

   /**
    * Original signature : <code>hid_device* hid_open(unsigned short, unsigned short, wchar_t*)</code><br>
    * <i>native declaration : hidapi.h:157</i>
    */
   @Mangling({"_Z8hid_openjjP7wchar_t", "?hid_open@@YAPA11hid_device_IIPA7wchar_t@Z"})
   HIDAPILibrary.hid_device hid_open(short vendor_id, short product_id, CharBuffer serial_number);

   /**
    * Original signature : <code>hid_device* hid_open_path(const char*)</code><br>
    * <i>native declaration : hidapi.h:172</i><br>
    * @deprecated use the safer methods {@link #hid_open_path(String)} and {@link #hid_open_path(Pointer)} instead
    */
   @Mangling({"_Z13hid_open_pathPKc", "?hid_open_path@@YAPA11hid_device_PAD@Z"})
   @Deprecated
   HIDAPILibrary.hid_device hid_open_path(Pointer path);

   /**
    * Original signature : <code>hid_device* hid_open_path(const char*)</code><br>
    * <i>native declaration : hidapi.h:172</i>
    */
   @Mangling({"_Z13hid_open_pathPKc", "?hid_open_path@@YAPA11hid_device_PAD@Z"})
   HIDAPILibrary.hid_device hid_open_path(String path);

   /**
    * Original signature : <code>hid_write(hid_device*, const unsigned char*, size_t)</code><br>
    * <i>native declaration : hidapi.h:200</i><br>
    * @deprecated use the safer methods {@link #hid_write(HIDAPILibrary.hid_device, byte[], NativeSize)} and {@link #hid_write(HIDAPILibrary.hid_device, Pointer, NativeSize)} instead
    */
   @Mangling({"_Z9hid_writeP11hid_device_PKh6size_t", "?hid_write@@YAXPA11hid_device_PAE6size_t@Z"})
   @Deprecated
   int hid_write(HIDAPILibrary.hid_device device, Pointer data, NativeSize length);

   /**
    * Original signature : <code>hid_write(hid_device*, const unsigned char*, size_t)</code><br>
    * <i>native declaration : hidapi.h:200</i>
    */
   @Mangling({"_Z9hid_writeP11hid_device_PKh6size_t", "?hid_write@@YAXPA11hid_device_PAE6size_t@Z"})
   int hid_write(HIDAPILibrary.hid_device device, byte[] data, NativeSize length);

   /**
    * Original signature : <code>hid_read_timeout(hid_device*, unsigned char*, size_t, int)</code><br>
    * <i>native declaration : hidapi.h:220</i><br>
    * @deprecated use the safer methods {@link #hid_read_timeout(HIDAPILibrary.hid_device, ByteBuffer, NativeSize, int)} and {@link #hid_read_timeout(HIDAPILibrary.hid_device, Pointer, NativeSize, int)} instead
    */
   @Mangling({"_Z16hid_read_timeoutP11hid_device_Ph6size_ti", "?hid_read_timeout@@YAXPA11hid_device_PAE6size_tH@Z"})
   @Deprecated
   int hid_read_timeout(HIDAPILibrary.hid_device dev, Pointer data, NativeSize length, int milliseconds);

   /**
    * Original signature : <code>hid_read_timeout(hid_device*, unsigned char*, size_t, int)</code><br>
    * <i>native declaration : hidapi.h:220</i>
    */
   @Mangling({"_Z16hid_read_timeoutP11hid_device_Ph6size_ti", "?hid_read_timeout@@YAXPA11hid_device_PAE6size_tH@Z"})
   int hid_read_timeout(HIDAPILibrary.hid_device dev, ByteBuffer data, NativeSize length, int milliseconds);

   /**
    * Original signature : <code>hid_read(hid_device*, unsigned char*, size_t)</code><br>
    * <i>native declaration : hidapi.h:239</i><br>
    * @deprecated use the safer methods {@link #hid_read(HIDAPILibrary.hid_device, ByteBuffer, NativeSize)} and {@link #hid_read(HIDAPILibrary.hid_device, Pointer, NativeSize)} instead
    */
   @Mangling({"_Z8hid_readP11hid_device_Ph6size_t", "?hid_read@@YAXPA11hid_device_PAE6size_t@Z"})
   @Deprecated
   int hid_read(HIDAPILibrary.hid_device device, Pointer data, NativeSize length);

   /**
    * Original signature : <code>hid_read(hid_device*, unsigned char*, size_t)</code><br>
    * <i>native declaration : hidapi.h:239</i>
    */
   @Mangling({"_Z8hid_readP11hid_device_Ph6size_t", "?hid_read@@YAXPA11hid_device_PAE6size_t@Z"})
   int hid_read(HIDAPILibrary.hid_device device, ByteBuffer data, NativeSize length);

   /**
    * Original signature : <code>hid_set_nonblocking(hid_device*, int)</code><br>
    * <i>native declaration : hidapi.h:259</i>
    */
   @Mangling({"_Z19hid_set_nonblockingP11hid_device_i", "?hid_set_nonblocking@@YAXPA11hid_device_H@Z"})
   int hid_set_nonblocking(HIDAPILibrary.hid_device device, int nonblock);

   /**
    * Original signature : <code>hid_send_feature_report(hid_device*, const unsigned char*, size_t)</code><br>
    * <i>native declaration : hidapi.h:287</i><br>
    * @deprecated use the safer methods {@link #hid_send_feature_report(HIDAPILibrary.hid_device, byte[], NativeSize)} and {@link #hid_send_feature_report(HIDAPILibrary.hid_device, Pointer, NativeSize)} instead
    */
   @Mangling({"_Z23hid_send_feature_reportP11hid_device_PKh6size_t", "?hid_send_feature_report@@YAXPA11hid_device_PAE6size_t@Z"})
   @Deprecated
   int hid_send_feature_report(HIDAPILibrary.hid_device device, Pointer data, NativeSize length);

   /**
    * Original signature : <code>hid_send_feature_report(hid_device*, const unsigned char*, size_t)</code><br>
    * <i>native declaration : hidapi.h:287</i>
    */
   @Mangling({"_Z23hid_send_feature_reportP11hid_device_PKh6size_t", "?hid_send_feature_report@@YAXPA11hid_device_PAE6size_t@Z"})
   int hid_send_feature_report(HIDAPILibrary.hid_device device, byte[] data, NativeSize length);

   /**
    * Original signature : <code>hid_get_feature_report(hid_device*, unsigned char*, size_t)</code><br>
    * <i>native declaration : hidapi.h:308</i><br>
    * @deprecated use the safer methods {@link #hid_get_feature_report(HIDAPILibrary.hid_device, ByteBuffer, NativeSize)} and {@link #hid_get_feature_report(HIDAPILibrary.hid_device, Pointer, NativeSize)} instead
    */
   @Mangling({"_Z22hid_get_feature_reportP11hid_device_Ph6size_t", "?hid_get_feature_report@@YAXPA11hid_device_PAE6size_t@Z"})
   @Deprecated
   int hid_get_feature_report(HIDAPILibrary.hid_device device, Pointer data, NativeSize length);

   /**
    * Original signature : <code>hid_get_feature_report(hid_device*, unsigned char*, size_t)</code><br>
    * <i>native declaration : hidapi.h:308</i>
    */
   @Mangling({"_Z22hid_get_feature_reportP11hid_device_Ph6size_t", "?hid_get_feature_report@@YAXPA11hid_device_PAE6size_t@Z"})
   int hid_get_feature_report(HIDAPILibrary.hid_device device, ByteBuffer data, NativeSize length);

   /**
    * Original signature : <code>hid_close(hid_device*)</code><br>
    * <i>native declaration : hidapi.h:315</i>
    */
   @Mangling({"_Z9hid_closeP11hid_device_", "?hid_close@@YAXPA11hid_device_@Z"})
   void hid_close(HIDAPILibrary.hid_device device);

   /**
    * Original signature : <code>hid_get_manufacturer_string(hid_device*, wchar_t*, size_t)</code><br>
    * <i>native declaration : hidapi.h:327</i><br>
    * @deprecated use the safer methods {@link #hid_get_manufacturer_string(HIDAPILibrary.hid_device, CharBuffer, NativeSize)} and {@link #hid_get_manufacturer_string(HIDAPILibrary.hid_device, CharByReference, NativeSize)} instead
    */
   @Mangling({"_Z27hid_get_manufacturer_stringP11hid_device_P7wchar_t6size_t", "?hid_get_manufacturer_string@@YAXPA11hid_device_PA7wchar_t6size_t@Z"})
   @Deprecated
   int hid_get_manufacturer_string(HIDAPILibrary.hid_device device, CharByReference string, NativeSize maxlen);

   /**
    * Original signature : <code>hid_get_manufacturer_string(hid_device*, wchar_t*, size_t)</code><br>
    * <i>native declaration : hidapi.h:327</i>
    */
   @Mangling({"_Z27hid_get_manufacturer_stringP11hid_device_P7wchar_t6size_t", "?hid_get_manufacturer_string@@YAXPA11hid_device_PA7wchar_t6size_t@Z"})
   int hid_get_manufacturer_string(HIDAPILibrary.hid_device device, CharBuffer string, NativeSize maxlen);

   /**
    * Original signature : <code>hid_get_product_string(hid_device*, wchar_t*, size_t)</code><br>
    * <i>native declaration : hidapi.h:339</i><br>
    * @deprecated use the safer methods {@link #hid_get_product_string(HIDAPILibrary.hid_device, CharBuffer, NativeSize)} and {@link #hid_get_product_string(HIDAPILibrary.hid_device, CharByReference, NativeSize)} instead
    */
   @Mangling({"_Z22hid_get_product_stringP11hid_device_P7wchar_t6size_t", "?hid_get_product_string@@YAXPA11hid_device_PA7wchar_t6size_t@Z"})
   @Deprecated
   int hid_get_product_string(HIDAPILibrary.hid_device device, CharByReference string, NativeSize maxlen);

   /**
    * Original signature : <code>hid_get_product_string(hid_device*, wchar_t*, size_t)</code><br>
    * <i>native declaration : hidapi.h:339</i>
    */
   @Mangling({"_Z22hid_get_product_stringP11hid_device_P7wchar_t6size_t", "?hid_get_product_string@@YAXPA11hid_device_PA7wchar_t6size_t@Z"})
   int hid_get_product_string(HIDAPILibrary.hid_device device, CharBuffer string, NativeSize maxlen);

   /**
    * Original signature : <code>hid_get_serial_number_string(hid_device*, wchar_t*, size_t)</code><br>
    * <i>native declaration : hidapi.h:351</i><br>
    * @deprecated use the safer methods {@link #hid_get_serial_number_string(HIDAPILibrary.hid_device, CharBuffer, NativeSize)} and {@link #hid_get_serial_number_string(HIDAPILibrary.hid_device, CharByReference, NativeSize)} instead
    */
   @Mangling({"_Z28hid_get_serial_number_stringP11hid_device_P7wchar_t6size_t", "?hid_get_serial_number_string@@YAXPA11hid_device_PA7wchar_t6size_t@Z"})
   @Deprecated
   int hid_get_serial_number_string(HIDAPILibrary.hid_device device, CharByReference string, NativeSize maxlen);

   /**
    * Original signature : <code>hid_get_serial_number_string(hid_device*, wchar_t*, size_t)</code><br>
    * <i>native declaration : hidapi.h:351</i>
    */
   @Mangling({"_Z28hid_get_serial_number_stringP11hid_device_P7wchar_t6size_t", "?hid_get_serial_number_string@@YAXPA11hid_device_PA7wchar_t6size_t@Z"})
   int hid_get_serial_number_string(HIDAPILibrary.hid_device device, CharBuffer string, NativeSize maxlen);

   /**
    * Original signature : <code>hid_get_indexed_string(hid_device*, int, wchar_t*, size_t)</code><br>
    * <i>native declaration : hidapi.h:364</i><br>
    * @deprecated use the safer methods {@link #hid_get_indexed_string(HIDAPILibrary.hid_device, int, CharBuffer, NativeSize)} and {@link #hid_get_indexed_string(HIDAPILibrary.hid_device, int, CharByReference, NativeSize)} instead
    */
   @Mangling({"_Z22hid_get_indexed_stringP11hid_device_iP7wchar_t6size_t", "?hid_get_indexed_string@@YAXPA11hid_device_HPA7wchar_t6size_t@Z"})
   @Deprecated
   int hid_get_indexed_string(HIDAPILibrary.hid_device device, int string_index, CharByReference string, NativeSize maxlen);

   /**
    * Original signature : <code>hid_get_indexed_string(hid_device*, int, wchar_t*, size_t)</code><br>
    * <i>native declaration : hidapi.h:364</i>
    */
   @Mangling({"_Z22hid_get_indexed_stringP11hid_device_iP7wchar_t6size_t", "?hid_get_indexed_string@@YAXPA11hid_device_HPA7wchar_t6size_t@Z"})
   int hid_get_indexed_string(HIDAPILibrary.hid_device device, int string_index, CharBuffer string, NativeSize maxlen);

   /**
    * Original signature : <code>wchar_t* hid_error(hid_device*)</code><br>
    * <i>native declaration : hidapi.h:375</i>
    */
   @Mangling({"_Z9hid_errorP11hid_device_", "?hid_error@@YAQB7wchar_tPA11hid_device_@Z"})
   WString hid_error(HIDAPILibrary.hid_device device);

   /// Pointer to unknown (opaque) type
   class hid_device extends PointerType
      {
      public hid_device(final Pointer address)
         {
         super(address);
         }

      public hid_device()
         {
         super();
         }
      }
   }
